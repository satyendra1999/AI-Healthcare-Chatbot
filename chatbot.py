import streamlit as st
import time
from transformers import pipeline
import nltk
from pathlib import Path

# Cache NLTK downloads
if not Path("nltk_cache").exists():
    nltk.download("punkt", download_dir="nltk_cache")
    nltk.download("stopwords", download_dir="nltk_cache")
nltk.data.path.append("nltk_cache")

# Load Healthcare-specific Model
@st.cache_resource
def load_chatbot():
    return pipeline("question-answering", model="deepset/roberta-base-squad2")

chatbot = load_chatbot()

# Manual Responses for Quick Answers (Hindi + English)
manual_responses = {
   "hello": {
    "en": "Namaste!! How can I assist you today?",
    "hi": "рдирдорд╕реНрддреЗ!! рдореИрдВ рдЖрдЬ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?"
    },
    "fever": {
        "en": "A fever is usually a sign of infection. Stay hydrated, rest, and monitor your temperature. Consult a doctor if it persists for more than 3 days.",
        "hi": "рдмреБрдЦрд╛рд░ рдЖрдорддреМрд░ рдкрд░ рд╕рдВрдХреНрд░рдордг рдХрд╛ рд╕рдВрдХреЗрдд рд╣реЛрддрд╛ рд╣реИред рдкрд╛рдиреА рдкрд┐рдПрдВ, рдЖрд░рд╛рдо рдХрд░реЗрдВ рдФрд░ рддрд╛рдкрдорд╛рди рдХреЛ рдореЙрдирд┐рдЯрд░ рдХрд░реЗрдВред рдпрджрд┐ рдпрд╣ 3 рджрд┐рдиреЛрдВ рд╕реЗ рдЕрдзрд┐рдХ рдмрдирд╛ рд░рд╣реЗ, рддреЛ рдбреЙрдХреНрдЯрд░ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред"
    },
    "cough": {
        "en": "A dry cough could be due to allergies, while a wet cough may indicate infection. Drink warm fluids and consult a doctor if severe.",
        "hi": "рд╕реВрдЦреА рдЦрд╛рдВрд╕реА рдПрд▓рд░реНрдЬреА рдХреЗ рдХрд╛рд░рдг рд╣реЛ рд╕рдХрддреА рд╣реИ, рдЬрдмрдХрд┐ рдЧреАрд▓реА рдЦрд╛рдВрд╕реА рд╕рдВрдХреНрд░рдордг рдХрд╛ рд╕рдВрдХреЗрдд рд╣реЛ рд╕рдХрддреА рд╣реИред рдЧрд░реНрдо рддрд░рд▓ рдкрджрд╛рд░реНрде рдкрд┐рдПрдВ рдФрд░ рдЧрдВрднреАрд░ рд╣реЛрдиреЗ рдкрд░ рдбреЙрдХреНрдЯрд░ рд╕реЗ рд╕рд▓рд╛рд╣ рд▓реЗрдВред"
    },
    "headache": {
        "en": "Headaches can be due to stress, dehydration, or lack of sleep. Try resting, drinking water, or taking a mild pain reliever.",
        "hi": "рд╕рд┐рд░рджрд░реНрдж рддрдирд╛рд╡, рдирд┐рд░реНрдЬрд▓реАрдХрд░рдг рдпрд╛ рдиреАрдВрдж рдХреА рдХрдореА рдХреЗ рдХрд╛рд░рдг рд╣реЛ рд╕рдХрддрд╛ рд╣реИред рдЖрд░рд╛рдо рдХрд░реЗрдВ, рдкрд╛рдиреА рдкрд┐рдПрдВ рдпрд╛ рд╣рд▓реНрдХреА рджрд░реНрдж рдирд┐рд╡рд╛рд░рдХ рджрд╡рд╛ рд▓реЗрдВред"
    },
    "appointment": {
        "en": "You can book an appointment by calling your nearest hospital or using an online healthcare booking service.",
        "hi": "рдЖрдк рдЕрдкрдиреЗ рдирдЬрджреАрдХреА рдЕрд╕реНрдкрддрд╛рд▓ рдореЗрдВ рдХреЙрд▓ рдХрд░рдХреЗ рдпрд╛ рдСрдирд▓рд╛рдЗрди рд╣реЗрд▓реНрдердХреЗрдпрд░ рдмреБрдХрд┐рдВрдЧ рд╕реЗрд╡рд╛ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рдмреБрдХ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред"
    },
    "book appointment": {
        "en": "You can book an appointment by calling your nearest hospital or using an online healthcare booking service.",
        "hi": "рдЖрдк рдЕрдкрдиреЗ рдирдЬрджреАрдХреА рдЕрд╕реНрдкрддрд╛рд▓ рдореЗрдВ рдХреЙрд▓ рдХрд░рдХреЗ рдпрд╛ рдСрдирд▓рд╛рдЗрди рд╣реЗрд▓реНрдердХреЗрдпрд░ рдмреБрдХрд┐рдВрдЧ рд╕реЗрд╡рд╛ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдХреЗ рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рдмреБрдХ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред"
    },
    
    "cancel appointment": {
        "en": "You can cancel your appointment by contacting the hospital or through the online booking platform you used.",
        "hi": "рдЖрдк рдЕрдкрдиреЗ рдЕрд╕реНрдкрддрд╛рд▓ рд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░рдХреЗ рдпрд╛ рдЬрд┐рд╕ рдСрдирд▓рд╛рдЗрди рдмреБрдХрд┐рдВрдЧ рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд┐рдпрд╛ рдерд╛, рдЙрд╕рдХреЗ рдорд╛рдзреНрдпрдо рд╕реЗ рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рд░рджреНрдж рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред"
    },
    
    "reschedule appointment": {
        "en": "To reschedule, call the hospital or visit the website where you booked your appointment.",
        "hi": "рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рдХреЛ рд░реАрд╢реЗрдбреНрдпреВрд▓ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП, рдЕрд╕реНрдкрддрд╛рд▓ рдХреЛ рдХреЙрд▓ рдХрд░реЗрдВ рдпрд╛ рдЬрд┐рд╕ рд╡реЗрдмрд╕рд╛рдЗрдЯ рд╕реЗ рдмреБрдХрд┐рдВрдЧ рдХреА рдереА, рд╡рд╣рд╛рдВ рдЬрд╛рдПрдВред"
    },
    
    "appointment documents": {
        "en": "You may need an ID proof, previous medical reports, and a referral letter if required.",
        "hi": "рдЖрдкрдХреЛ рдкрд╣рдЪрд╛рди рдкрддреНрд░, рдкрд┐рдЫрд▓реЗ рдореЗрдбрд┐рдХрд▓ рд░рд┐рдкреЛрд░реНрдЯреНрд╕ рдФрд░ рдпрджрд┐ рдЖрд╡рд╢реНрдпрдХ рд╣реЛ рддреЛ рд░реЗрдлрд░рд▓ рдкрддреНрд░ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛ рд╕рдХрддреА рд╣реИред"
    },
    
    "walk-in appointment": {
        "en": "Some hospitals allow walk-in consultations, but booking an appointment is recommended to avoid long waiting times.",
        "hi": "рдХреБрдЫ рдЕрд╕реНрдкрддрд╛рд▓ рд╡реЙрдХ-рдЗрди рдкрд░рд╛рдорд░реНрд╢ рдХреА рдЕрдиреБрдорддрд┐ рджреЗрддреЗ рд╣реИрдВ, рд▓реЗрдХрд┐рди рд▓рдВрдмреА рдкреНрд░рддреАрдХреНрд╖рд╛ рд╕реЗ рдмрдЪрдиреЗ рдХреЗ рд▓рд┐рдП рдЕрдкреЙрдЗрдВрдЯрдореЗрдВрдЯ рдмреБрдХ рдХрд░рдирд╛ рдмреЗрд╣рддрд░ рд╣реЛрддрд╛ рд╣реИред"
    }
}


# Function to Detect Language
def detect_language(text):
    hindi_chars = set("рдЕрдЖрдЗрдИрдЙрдКрдЛрдПрдРрдУрдФрдХрдЦрдЧрдШрдЩрдЪрдЫрдЬрдЭрдЮрдЯрдардбрдврдгрддрдерджрдзрдирдкрдлрдмрднрдордпрд░рд▓рд╡рд╢рд╖рд╕рд╣")
    return "hi" if any(char in hindi_chars for char in text) else "en"

# Healthcare Chatbot Logic
def healthcare_chatbot(user_input):
    user_input = user_input.lower()
    lang = detect_language(user_input)
    
    # Check for quick responses first
    for key in manual_responses.keys():
        if key in user_input:
            return manual_responses[key][lang]
    
    # AI-generated response
    response = chatbot(question=user_input, context="This is a healthcare chatbot providing medical advice.")
    return response["answer"]

# Typing Animation Effect with st.empty()
def typing_effect(text):
    displayed_text = ""
    placeholder = st.empty()  # Create a placeholder to update text dynamically
    for char in text:
        displayed_text += char
        placeholder.markdown(f"**Healthcare Assistant:** {displayed_text}тЦИ", unsafe_allow_html=True)
        time.sleep(0.03)

# Streamlit Web App with Animation
def main():
    st.title("ЁЯЪС AI-Healthcare Assistant Chatbot (рд╣рд┐рдВрджреА + English)")

    # Custom Styling for Chat UI
    st.markdown(
        """
        <style>
        .stChatMessage {
            background-color: #f0f2f6;
            border-radius: 12px;
            padding: 10px;
            margin-bottom: 8px;
        }
        .stChatInput input {
            font-size: 16px;
            border-radius: 10px;
            padding: 10px;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

    user_input = st.chat_input("How can I assist you today? | рдЖрдЬ рдореИрдВ рдЖрдкрдХреА рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛ рд╣реВрдБ?")
    
    if user_input:
        st.write("ЁЯСд **User:**", user_input)
        
        with st.spinner("ЁЯТб Processing your query... | рдЖрдкрдХреЗ рдкреНрд░рд╢реНрди рдХрд╛ рдЙрддреНрддрд░ рдЦреЛрдЬрд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ..."):
            time.sleep(1.5)  # Simulating processing time
            response = healthcare_chatbot(user_input)

        typing_effect(response)  # Display response with animation

if __name__ == "__main__":
    main()
